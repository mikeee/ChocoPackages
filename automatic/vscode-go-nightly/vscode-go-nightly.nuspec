<?xml version="1.0" encoding="utf-8"?>
<!-- Read this before creating packages: https://chocolatey.org/docs/create-packages -->
<!-- It is especially important to read the above link to understand additional requirements when publishing packages to the community feed aka dot org (https://chocolatey.org/packages). -->
<!-- Test your packages in a test environment: https://github.com/chocolatey/chocolatey-test-environment -->
<!--
This is a nuspec. It mostly adheres to https://docs.nuget.org/create/Nuspec-Reference. Chocolatey uses a special version of NuGet.Core that allows us to do more than was initially possible. As such there are certain things to be aware of:
* the package xmlns schema url may cause issues with nuget.exe
* Any of the following elements can ONLY be used by choco tools - projectSourceUrl, docsUrl, mailingListUrl, bugTrackerUrl, packageSourceUrl, provides, conflicts, replaces
* nuget.exe can still install packages with those elements but they are ignored. Any authoring tools or commands will error on those elements
-->
<!-- You can embed software files directly into packages, as long as you are not bound by distribution rights. -->
<!-- * If you are an organization making private packages, you probably have no issues here -->
<!-- * If you are releasing to the community feed, you need to consider distribution rights. -->
<package xmlns="http://schemas.microsoft.com/packaging/2015/06/nuspec.xsd">
    <metadata>
        <!-- == PACKAGE SPECIFIC SECTION == -->
        <!-- This section is about this package, although id and version have ties back to the software -->
        <!-- id is lowercase and if you want a good separator for words, use '-', not '.'. Dots are only acceptable as suffixes for certain types of packages, e.g. .install, .portable, .extension, .template -->
        <!-- If the software is cross-platform, attempt to use the same id as the debian/rpm package(s) if possible. -->
        <id>vscode-go-nightly</id>
        <!-- version should MATCH as closely as possible with the underlying software -->
        <!-- Is the version a prerelease of a version? https://docs.nuget.org/create/versioning#creating-prerelease-packages -->
        <!-- Note that unstable versions like 0.0.1 can be considered a released version, but it's possible that one can release a 0.0.1-beta before you release a 0.0.1 version. If the version number is final, that is considered a released version and not a prerelease. -->
        <version>2024.8.2217</version>
        <packageSourceUrl>https://github.com/mikeee/ChocoPackages/tree/master/automatic/vscode-go-nightly</packageSourceUrl>
        <!-- owners is a poor name for maintainers of the package. It sticks around by this name for compatibility reasons. It basically means you. -->
        <owners>mikeee</owners>
        <!-- ============================== -->
        <!-- == SOFTWARE SPECIFIC SECTION == -->
        <!-- This section is about the software itself -->
        <title>Go Nightly for VS Code</title>
        <authors>Go Team at Google</authors>
        <!-- projectUrl is required for the community feed -->
        <projectUrl>https://marketplace.visualstudio.com/items?itemName=golang.go-nightly</projectUrl>
        <iconUrl>https://cdn.jsdelivr.net/gh/mikeee/ChocoPackages/icons/golang.png</iconUrl>
        <copyright>Original Work Copyright (c) 2015-2020 Microsoft Corporation Current Work and Modifications Copyright (c) 2020-present The Go Authors</copyright>
        <!-- If there is a license Url available, it is is required for the community feed -->
        <licenseUrl>https://marketplace.visualstudio.com/items/golang.go-nightly/license</licenseUrl>
        <requireLicenseAcceptance>false</requireLicenseAcceptance>
        <projectSourceUrl>https://github.com/golang/vscode-go</projectSourceUrl>
        <docsUrl>https://github.com/golang/vscode-go/wiki/nightly</docsUrl>
        <!--<mailingListUrl></mailingListUrl>-->
        <!--<bugTrackerUrl></bugTrackerUrl>-->
        <tags>vs code vscode go golang nightly extension</tags>
        <summary>The preview version of the VS Code Go extension</summary>
        <description># Go Nightly for VS Code

_ATTENTION_: This is the preview version of the VS Code Go extension, used for early feedback and testing.
It is published nightly and contains previews of new features and bug fixes that are still under review or test. Therefore, this extension can be broken or unstable at times. If you are looking for the stable version, please install the default VS Code Go extension instead.

NOTE: The stable Go extension (golang.go) cannot be used at the same time as the preview Go Nightly extension (golang.go-nightly). If you have installed both extensions, you must disable or uninstall one of them. For further guidance, read the documentation on how to disable an extension.

# Differences between Go and Go Nightly

- Go Nightly is released more frequently than the stable version (once per weekday).
- Go Nightly includes features and bug fixes that are not yet finalized.
- Go Nightly may use pre-release versions of tools (such as gopls) instead of released versions.

For more information about Go Nightly, read the Go Nightly documentation.

The VS Code Go extension provides rich language support for the Go programming language.

**NOTE**: This package is automatically updated. If it is out of date and there is no newer package submitted, please use the `Contact Maintainers` functionality to alert me.
</description>
        <releaseNotes>https://marketplace.visualstudio.com/items/golang.go-nightly/changelog</releaseNotes>
        <!-- =============================== -->
        <!-- Specifying dependencies and version ranges? https://docs.nuget.org/create/versioning#specifying-version-ranges-in-.nuspec-files -->
        <dependencies>
            <dependency id="chocolatey-vscode.extension" version="1.1.0" />
            <dependency id="vscode" version="1.75.0" />
            <!-- <dependency id="autohotkey" /> -->
            <!-- <dependency id="" version="[__EXACT_VERSION__]" /> -->
            <!-- <dependency id="chocolatey" version="0.10.8" /> -->
            <!-- <dependency id="" version="[_MIN_VERSION_INCLUSIVE, MAX_VERSION_EXCLUSIVE)" /> -->
            <!-- <dependency id="" /> -->
            <!-- <dependency id="chocolatey-uninstall.extension" /> -->
        </dependencies>
        <!-- chocolatey-uninstall.extension - If supporting 0.9.9.x (or below) and including a chocolateyUninstall.ps1 file to uninstall an EXE/MSI, you probably want to include chocolatey-uninstall.extension as a dependency. Please verify whether you are using a helper function from that package. -->
        <!--<provides>NOT YET IMPLEMENTED</provides>-->
        <!--<conflicts>NOT YET IMPLEMENTED</conflicts>-->
        <!--<replaces>NOT YET IMPLEMENTED</replaces>-->
    </metadata>
    <files>
        <!-- this section controls what actually gets packaged into the Chocolatey package -->
        <file src="tools\**" target="tools" />
        <!--Building from Linux? You may need this instead: <file src="tools/**" target="tools" />-->
    </files>
</package>
